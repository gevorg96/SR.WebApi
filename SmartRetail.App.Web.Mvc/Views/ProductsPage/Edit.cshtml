@using Microsoft.EntityFrameworkCore.Internal
@using SmartRetail.App.Web.Models.ViewModel.Units
@model SmartRetail.App.Web.Models.ViewModel.Products.ProductViewModel

@{
    var units = ViewData["Units"] as IEnumerable<UnitViewModel>;
    var isEdit = (bool) ViewData["isEdit"];
}


<div class="modal-content">
    <div class="modal-header">
        <h4>Редактирование товара</h4>
    </div>
    <div class="modal-body">
        <div class="container-fluid">
            <form asp-action="Edit" asp-controller="ProductsPage"  asp-antiforgery="true" method="post" class="form-horizontal" id="EditForm" enctype="multipart/form-data">
                <div class="row form-group">
                    <div class="col-6">
                        @{
                            if (isEdit)
                            {
                                if (!string.IsNullOrEmpty(Model.ImgUrl))
                                {
                                    <div class="imgChange"><img src="@Model.ImgUrl" width="150px" height="100px" alt="@Model.ProdName" class="img-circle innerImage"></div>
                                }
                                else
                                {
                                    <div class="imgChange"><img src="/img/default.png" width="100px" height="100px" alt="@Model.ProdName" class="img-circle"></div>
                                }
                            }
                            else
                            {
                                <div class="imgChange" id="emptyImage"><img src="" width="150px" height="100px" alt="" class="img-circle innerImage"><p id="addImg"><b>Добавить изображение</b></p></div>
                            }
                        }
                    </div>
                    <div class="col-6 ml-auto">
                        <label asp-for="ProdName">Наименование</label>
                        <input asp-for="ProdName" class="form-control" value="@Model.ProdName"/>
                        <span style="font-size: 11px" id="prodNameValidation" asp-validation-for="ProdName" class="text-danger"></span>
                        <br/>
                        <label asp-for="VendorCode">Артикул</label>
                        <input asp-for="VendorCode" class="form-control" value="@Model.VendorCode"/>
                        <span asp-validation-for="VendorCode" class="text-danger"></span>
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-4">
                        <label asp-for="UnitId">Ед. изм.</label>
                        @Html.DropDownList("Unit", units.Select(item => new SelectListItem
                        {
                            Value = item.id.ToString(),
                            Text = item.name.ToString(),
                            Selected = "select" == item.id.ToString()
                        }), new {@class = "form-control", @id = "unit"})
                        <span asp-validation-for="Size" class="text-danger"></span>
                    </div>
                    <div class="col-4">
                        <label asp-for="Size">Размер</label>
                        <input type="number" asp-for="Size" class="form-control" value="@Model.Size"/>
                        <span asp-validation-for="Size" class="text-danger"></span>
                    </div>
                    <div class="col-4">
                        <label asp-for="Color">Цвет</label>
                        <input asp-for="Color" class="form-control" value="@Model.Color"/>
                        <span asp-validation-for="Color" class="text-danger"></span>
                    </div>
                    
                </div>
                <div class="row form-group">
                    <div class="col-4 ml-auto">
                        <label asp-for="Price">Цена</label>
                        <input class="form-control" type="text" data-val="true" data-val-number="Цена должна быть числом" id="Price" name="Price" value="@Model.Price"/>
                        <span style="font-size: 11px" id="priceValidation" asp-validation-for="Price" class="text-danger"></span>
                    </div>
                    <div class="col-4">
                        <label asp-for="Cost">Себестоимость</label>
                        @{
                            if (isEdit)
                            {
                                <input disabled class="form-control" type="text" id="Cost" name="Cost" value="@Model.Cost"/>
                            }
                            else
                            {
                                <input class="form-control" type="text" id="Cost" name="Cost" value="@Model.Cost"/>
                            }
                        }
                        <span asp-validation-for="Cost" class="text-danger"></span>
                    </div>
                    <div class="col-4">
                        <label asp-for="Stock">Остаток</label>
                        @{
                            if (isEdit)
                            {
                                <input disabled class="form-control" type="text" id="Stock" name="Stock" value="@Model.Stock"/>
                            }
                            else
                            {
                                <input class="form-control" type="text" id="Stock" name="Stock" value="@Model.Stock"/>

                            }
                        }
                        <span asp-validation-for="Stock" class="text-danger"></span>
                    </div>
                </div>
                <br/>
                <div class="form-group folderModal" id="@Model.CategoryId">
                    @{
                        var fullpathParts = new List<string>();                                                   
                        if (Model.Category != null)
                        {
                            fullpathParts = Model.Category.fullpath.Split('/').Where(p => !string.IsNullOrEmpty(p)).TakeLast(3).ToList();
                            <div class="row">
                                <div class="col-12 ml-auto">
                                    <ol class="breadcrumb">
                                        @{
                                            foreach (var item in fullpathParts)
                                            {
                                                <li class="breadcrumb-item">@item</li>
                                            }
                                        }
                                    </ol>
                                </div>
                            </div>
                        }
                    }
                </div>
                <div class="row">
                    <span id="Result" class="text-danger"></span>
                </div>
            </form>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
        @if (isEdit)
        {
            <button type="submit" id="EditButton" onclick="updateItem(@Model.Id)" class="btn btn-primary">Сохранить</button>
        }
        else
        {
            <button type="submit" disabled="disabled" id="EditButton" onclick="createItem()" class="btn btn-primary">Создать</button>

        }
    </div>
</div>



